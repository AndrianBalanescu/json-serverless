# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: json-serverless
plugins:
  - serverless-webpack
  - serverless-offline
package:
  individually: false
  excludeDevDependencies: true
custom: 
  file: ${file(./config/serverlessconfig.yml)} 
  custom:
  serverless-offline:
    resourceRoutes: true
  webpack:
    webpackConfig: 'webpack.config.prod.js'   # Name of webpack configuration file
    includeModules:
      packagePath: './package.json' 
      forceInclude:
        - pino-pretty
    packager: 'npm'   # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore
# The `provider` block defines where your service will be deployed
provider:
  stage: ${opt:stage, 'dev'}
  name: aws
  runtime: nodejs10.x
  region: ${opt:region, 'eu-central-1'}
  environment:
    S3BUCKET: ${self:custom.file.S3BUCKET}
    S3FILE: ${self:custom.file.S3FILE}
    READONLY: ${self:custom.file.READONLY}
    BASEPATH: ${self:custom.file.BASEPATH}

  apiKeys:
    - ${self:service}.${self:provider.stage}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:*"
       Resource: "*"
    -  Effect: "Allow"
       Action:
         - "s3:*"
       Resource: 
         - "arn:aws:s3:::${self:custom.file.S3BUCKET}/*"

# The `functions` block defines what code to deploy
functions:
  app:
    handler: src/handler.handler
    # The `events` block defines how to trigger the handler.helloWorld code
    events:
      - http: 
          path: /
          method: ANY
          cors: true
          private: true
      - http: 
          path: "{proxy+}"
          method: ANY
          cors: true
          private: true
resources:
  Resources:
    S3BucketStorage:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.file.S3BUCKET}